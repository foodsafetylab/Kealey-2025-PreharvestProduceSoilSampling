---
title: "Beta Diversity"
execute:
  echo: false
  message: false
  warning: false
bibliography: references.bib
---

# Beta Diversity

```{r, include=FALSE}

source("src/common_code.R", local = knitr::knit_global())
```

```{r}
physeq.prev <- readRDS('results/phyloseq.prevfiltered.RDS')
```

Beta diversity tells us how much diversity pairwise samples share with one another. Beta diversity metrics assign a value to that shared diversity. Bray-Curtis is a common non-phylogenetic metric used to compare sample composition based on presence and abundance of ASVs that I am using here. If you have preferred beta diversity metrics, I can add them in. 

To plot these measurements we have to choose an appropriate ordination method. PCA is NOT recommended for microbial data, since it is not linear, unless it is Hellinger-transformed. PCoA and NMDS are recommended for unconstrained ordination (axes are not constrained by sample metadata), while the former is used in most circumstances. CA is recommended for constrained ordination, however rare data could have an unduly large influence on CA. See [@qian2020guide] for more details. For these reasons, I'll stick with PCoA unless requested otherwise.



## Normalization

Transform data to relative proportions (no prior added). While not as sophisticated as other normalization methods it is currently the best method for normalizing library sizes while still maintaining community structure patterns. See [@mcknight2019methods] for more information.

```{r }
#All samples
physeq.prop <- transform_sample_counts(physeq.prev, function(x) x/sum(x) )
sample_data(physeq.prop)$SampleSums <- sample_sums(physeq.prev)
```

<!-- ## CLR normalization, McMurdie -->

<!-- Transform data using CLR (from McMurdie (Meth Mol Bio 2018) supplemental package).   -->

```{r }
# # copy instance and replace raw counts with CLR-normalized counts
# physeq.clr <- phyloseq_CLR(physeq.prev)
# # otu_table(physeq.clr) <- otu_table(as(x, "matrix"), taxa_are_rows = FALSE)
# physeq.clr
# 
# mucosa.clr <- phyloseq_CLR(mucosa.prev)
# digesta.clr <- phyloseq_CLR(digesta.prev)
```

<!-- ## CLR normalization, mixOmics -->

<!-- CLR from `mixOmics`. -->

```{r }
# # get counts
# tmp <- as(otu_table(mucosa.prev),"matrix")
# 
# tmp <- tmp
# 
# # transpose if needed
# if(!taxa_are_rows(mucosa.prev)) { tmp <- t(tmp)}
# 
# x <- logratio.transfo(tmp, logratio = 'CLR', offset = 1)
# 
# # copy instance and replace raw counts with CLR-normalized counts
# mucosa.clr2 <- mucosa.prev
# otu_table(mucosa.clr2) <- otu_table(as(x, "matrix"), taxa_are_rows = TRUE)
# mucosa.clr2
```

Set the active normalization type (proportion for now)

```{r}
physeq.active <- physeq.prop
```

## PCoA plots (Bray Curtis metric)

### Sample_Type x Wetting_Agent

I ran Permutational multivariate analysis of variance (PERMANOVA) [@doi:https://doi.org/10.1002/9781118445112.stat07841] which is a non-parametric multivariate statistical permutation test between groups (Sample_Type x Wetting_Agent). This method is deemed appropriate for beta diversity comparison for microbiome data. The analysis shows that the compared groups (*Drags_PBS*,*Drags_BPW*,*Booties_PBS*,*Booties_BPW*,*Grabs_N/A*) are statistically different at a p-value of < 0.05. In the PCoA plot below, color depicts "Sample_Type" and shape shows the "Wetting_Agent". The two standard samples are laying on top of each other.

```{r }

set.seed(12345)
# Calculate CCA ordination 
finalPhyseq.ord <- ordinate(physeq.active, 
                            formula = ~group,
                            "PCoA", "bray")
#finalPhyseq.ord <- ordinate(physeq.active2, 
                            #formula = ~Trt + Condition(Animal_ID),
 #                           "NMDS", "bray")

#plot_scree(finalPhyseq.ord, title = "Scree plot showing CCA Eigenvalues")


# Calculate PERMANOVA with location as random factor
finalPhyseq.prop.dist.bc0 <- phyloseq::distance(physeq.active, method = "bray")
finalPhyseq.meta0 <- as(sample_data(physeq.active), "data.frame")
p0 <- adonis2(finalPhyseq.prop.dist.bc0 ~ group,
       data = finalPhyseq.meta0, strata = finalPhyseq.meta0$Location)
p0
#beta <- betadisper(finalPhyseq.prop.dist.bc0, finalPhyseq.meta0$Trt)
#permutest(beta)

pval = p0$`Pr(>F)`[1]

```

```{r }
set.seed(1234)

p1 = plot_ordination(physeq.active,
                     finalPhyseq.ord,
                     type="samples",
                     color="Sample_Type",
                     shape = "Wetting_Agent",
                     title="Samples") + geom_point(size = 2.5)+
   scale_color_manual(values = dittoSeq::dittoColors()[1:24]) +
  stat_ellipse()
  #facet_wrap(~group, ncol = 4)
p2 = p1 + ggtitle("PCoA, Bray Curtis distance for SampleType x Wetting_Agent", 
             subtitle = paste("pval=",round(p0$`Pr(>F)`[1], digits = 3)))
ggsave("results/Bray_PCoA_SampleType_Wetting_Agent.jpeg")

# p1$data$group <-factor(p1$data$group,
#                        levels = c("C_0h","C_6h" ,"C_24h","C_d8",
#                                   "DS_0h", "DS_6h","DS_24h","DS_d8",
#                                   "HS_0h","HS_6h","HS_24h","HS_d8",
#                                   "DSP_0h", "DSP_6h","DSP_24h","DSP_d8",
#                                   "HSP_0h","HSP_6h","HSP_24h","HSP_d8"))
ggplotly(p1) %>%
  layout(title = list(text = paste0("PCoA, Bray Curtis distance",
                                    '<br>',
                                    '<sup>',
                                     paste("pval=",round(p0$`Pr(>F)`[1], digits = 3)))))

```


```{r }
# Save pairwise comparisons
set.seed(12345)

bray_pw_all <- pairwise.adonis(finalPhyseq.prop.dist.bc0, factors = finalPhyseq.meta0$group, perm = 999, p.adjust.m='fdr')

write.csv(bray_pw_all[order(bray_pw_all$p.adjusted),] , "results/bray_pw_permanova_group.csv", row.names = F)

```


### SampleType

```{r }

set.seed(12345)
# Calculate CCA ordination 
finalPhyseq.ord <- ordinate(physeq.active, 
                            formula = ~SampleType,
                            #+ Condition(Replicate),
                            "PCoA", "bray")
#finalPhyseq.ord <- ordinate(physeq.active2, 
                            #formula = ~Trt + Condition(Animal_ID),
 #                           "NMDS", "bray")

#plot_scree(finalPhyseq.ord, title = "Scree plot showing CCA Eigenvalues")


# Calculate PERMANOVA with location as random factor
finalPhyseq.prop.dist.bc0 <- phyloseq::distance(physeq.active, method = "bray")
finalPhyseq.meta0 <- as(sample_data(physeq.active), "data.frame")
p0 <- adonis2(finalPhyseq.prop.dist.bc0 ~ Sample_Type,
       data = finalPhyseq.meta0, strata = finalPhyseq.meta0$Location
       )
p0
#beta <- betadisper(finalPhyseq.prop.dist.bc0, finalPhyseq.meta0$Trt)
#permutest(beta)

pval = p0$`Pr(>F)`[1]

```

```{r }
set.seed(1234)

p1 = plot_ordination(physeq.active,
                     finalPhyseq.ord,
                     type="samples",
                     color="Sample_Type",
                     #shape = "Day",
                     title="Samples") + geom_point(size = 2.5)+
   scale_color_manual(values = dittoSeq::dittoColors()[1:24])  +
  stat_ellipse()
  #facet_wrap(~group, ncol = 4)
p2 = p1 + ggtitle("PCoA, Bray Curtis distance for SampleType", 
             subtitle = paste("pval=",round(p0$`Pr(>F)`[1], digits = 3)))
ggsave("results/Bray_PCoA_SampleType.jpeg")

# p1$data$group <-factor(p1$data$group,
#                        levels = c("C_0h","C_6h" ,"C_24h","C_d8",
#                                   "DS_0h", "DS_6h","DS_24h","DS_d8",
#                                   "HS_0h","HS_6h","HS_24h","HS_d8",
#                                   "DSP_0h", "DSP_6h","DSP_24h","DSP_d8",
#                                   "HSP_0h","HSP_6h","HSP_24h","HSP_d8"))
ggplotly(p1) %>%
  layout(title = list(text = paste0("PCoA, Bray Curtis distance",
                                    '<br>',
                                    '<sup>',
                                     paste("pval=",round(p0$`Pr(>F)`[1], digits = 3)))))
```


<!-- ### Wetting Agents -->

<!-- ```{r } -->

<!-- # Only subset to mares -->
<!-- #physeq.active2 <- subset_samples(physeq.active, SampleType != "Standard") -->


<!-- set.seed(12345) -->
<!-- # Calculate CCA ordination  -->
<!-- finalPhyseq.ord <- ordinate(physeq.active,  -->
<!--                             formula = ~Wetting_Agent, -->
<!--                             #+ Condition(Replicate), -->
<!--                             "PCoA", "bray") -->
<!-- #finalPhyseq.ord <- ordinate(physeq.active2,  -->
<!--                             #formula = ~Trt + Condition(Animal_ID), -->
<!--  #                           "NMDS", "bray") -->

<!-- #plot_scree(finalPhyseq.ord, title = "Scree plot showing CCA Eigenvalues") -->


<!-- # Calculate PERMANOVA with location as random factor -->
<!-- p0 <- adonis2(finalPhyseq.prop.dist.bc0 ~ Wetting_Agent, -->
<!--        data = finalPhyseq.meta0, strata = finalPhyseq.meta0$Location -->
<!--        ) -->
<!-- p0 -->
<!-- #beta <- betadisper(finalPhyseq.prop.dist.bc0, finalPhyseq.meta0$Trt) -->
<!-- #permutest(beta) -->

<!-- pval = p0$`Pr(>F)`[1] -->

<!-- ``` -->

<!-- ```{r } -->
<!-- set.seed(1234) -->

<!-- p1 = plot_ordination(physeq.active, -->
<!--                      finalPhyseq.ord, -->
<!--                      type="samples", -->
<!--                      color="Wetting_Agent", -->
<!--                      #shape = "Day", -->
<!--                      title="Samples") + geom_point(size = 2.5)+ -->
<!--    scale_color_manual(values = dittoSeq::dittoColors()[1:24]) + -->
<!--   stat_ellipse() -->
<!--   #facet_wrap(~group, ncol = 4) -->
<!-- p2 = p1 + ggtitle("PCoA, Bray Curtis distance for Wetting_Agent",  -->
<!--              subtitle = paste("pval=",round(p0$`Pr(>F)`[1], digits = 3))) -->
<!-- ggsave("results/Bray_PCoA_SampleType_Instrument_reps.jpeg") -->

<!-- # p1$data$group <-factor(p1$data$group, -->
<!-- #                        levels = c("C_0h","C_6h" ,"C_24h","C_d8", -->
<!-- #                                   "DS_0h", "DS_6h","DS_24h","DS_d8", -->
<!-- #                                   "HS_0h","HS_6h","HS_24h","HS_d8", -->
<!-- #                                   "DSP_0h", "DSP_6h","DSP_24h","DSP_d8", -->
<!-- #                                   "HSP_0h","HSP_6h","HSP_24h","HSP_d8")) -->
<!-- ggplotly(p1) %>% -->
<!--   layout(title = list(text = paste0("PCoA, Bray Curtis distance", -->
<!--                                     '<br>', -->
<!--                                     '<sup>', -->
<!--                                      paste("pval=",round(p0$`Pr(>F)`[1], digits = 3))))) -->
<!-- ``` -->


### Wetting Agents with N/A removed (PBS vs BPW)

```{r }
# Only subset to mares
physeq.active2 <- subset_samples(physeq.active, Wetting_Agent != "N/A")

set.seed(12345)
# Calculate CCA ordination
finalPhyseq.ord <- ordinate(physeq.active2,
                            formula = ~Wetting_Agent ,
                            #+ Condition(Replicate),
                            "PCoA", "bray")
#finalPhyseq.ord <- ordinate(physeq.active2,
                            #formula = ~Trt + Condition(Animal_ID),
 #                           "NMDS", "bray")

#plot_scree(finalPhyseq.ord, title = "Scree plot showing CCA Eigenvalues")


# Calculate PERMANOVA with location as random factor
finalPhyseq.prop.dist.bc0 <- phyloseq::distance(physeq.active2, method = "bray")
finalPhyseq.meta0 <- as(sample_data(physeq.active2), "data.frame")

p0 <- adonis2(finalPhyseq.prop.dist.bc0 ~ Wetting_Agent ,
       data = finalPhyseq.meta0, strata = finalPhyseq.meta0$Location
       #, strata = finalPhyseq.meta0$Replicate
       )
p0
#beta <- betadisper(finalPhyseq.prop.dist.bc0, finalPhyseq.meta0$Trt)
#permutest(beta)

```

```{r }
set.seed(1234)

p1 = plot_ordination(physeq.active,
                     finalPhyseq.ord,
                     type="samples",
                     color="Wetting_Agent",
                     #shape = "Day",
                     title="Samples") + geom_point(size = 2.5)+
   scale_color_manual(values = dittoSeq::dittoColors()[1:24])  +
  stat_ellipse()
  #facet_wrap(~group, ncol = 4)
p2 = p1 + ggtitle("PCoA, Bray Curtis distance for Wetting_Agent", 
             subtitle = paste("pval=",round(p0$`Pr(>F)`[1], digits = 3)))
ggsave("results/Bray_PCoA_Wetting_Agent.jpeg")

# p1$data$group <-factor(p1$data$group,
#                        levels = c("C_0h","C_6h" ,"C_24h","C_d8",
#                                   "DS_0h", "DS_6h","DS_24h","DS_d8",
#                                   "HS_0h","HS_6h","HS_24h","HS_d8",
#                                   "DSP_0h", "DSP_6h","DSP_24h","DSP_d8",
#                                   "HSP_0h","HSP_6h","HSP_24h","HSP_d8"))
ggplotly(p1) %>%
  layout(title = list(text = paste0("PCoA, Bray Curtis distance",
                                    '<br>',
                                    '<sup>',
                                     paste("pval=",round(p0$`Pr(>F)`[1], digits = 3)))))
```

As seen under the alpha diversity comparisons, the two wetting agents don't seem to affect the diversity of microbiome represented.



### Commodity Type

```{r }

set.seed(12345)
# Calculate CCA ordination
finalPhyseq.ord <- ordinate(physeq.active,
                            formula = ~Commodity_Type ,
                            #+ Condition(Replicate),
                            "PCoA", "bray")
#finalPhyseq.ord <- ordinate(physeq.active2,
                            #formula = ~Trt + Condition(Animal_ID),
 #                           "NMDS", "bray")

#plot_scree(finalPhyseq.ord, title = "Scree plot showing CCA Eigenvalues")


# Calculate PERMANOVA with location as random factor
finalPhyseq.prop.dist.bc0 <- phyloseq::distance(physeq.active2, method = "bray")
finalPhyseq.meta0 <- as(sample_data(physeq.active2), "data.frame")

p0 <- adonis2(finalPhyseq.prop.dist.bc0 ~ Commodity_Type ,
       data = finalPhyseq.meta0, strata = finalPhyseq.meta0$Location
       #, strata = finalPhyseq.meta0$Replicate
       )
p0
#beta <- betadisper(finalPhyseq.prop.dist.bc0, finalPhyseq.meta0$Trt)
#permutest(beta)

```

```{r }
set.seed(1234)

p1 = plot_ordination(physeq.active,
                     finalPhyseq.ord,
                     type="samples",
                     color="Commodity_Type",
                     #shape = "Day",
                     title="Samples") + geom_point(size = 2.5)+
   scale_color_manual(values = dittoSeq::dittoColors()[1:24])  +
  stat_ellipse()
  #facet_wrap(~group, ncol = 4)
p2 = p1 + ggtitle("PCoA, Bray Curtis distance for Commodity_Type", 
             subtitle = paste("pval=",round(p0$`Pr(>F)`[1], digits = 3)))
ggsave("results/Bray_PCoA_Commodity_Type.jpeg")

# p1$data$group <-factor(p1$data$group,
#                        levels = c("C_0h","C_6h" ,"C_24h","C_d8",
#                                   "DS_0h", "DS_6h","DS_24h","DS_d8",
#                                   "HS_0h","HS_6h","HS_24h","HS_d8",
#                                   "DSP_0h", "DSP_6h","DSP_24h","DSP_d8",
#                                   "HSP_0h","HSP_6h","HSP_24h","HSP_d8"))
ggplotly(p1) %>%
  layout(title = list(text = paste0("PCoA, Bray Curtis distance",
                                    '<br>',
                                    '<sup>',
                                     paste("pval=",round(p0$`Pr(>F)`[1], digits = 3)))))
```
